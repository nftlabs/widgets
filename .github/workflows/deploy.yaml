name: Deployment

on:
  push:
    branches: [ main ]
  # manual trigger
  workflow_dispatch:


jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          pre_release_branches: .*
          default_bump: patch
          default_prerelease_bump: prerelease
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    outputs:
      ipfs_hash: ${{ steps.upload.outputs.hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the IPFS bundle
        run: yarn build

      - name: Pin to IPFS
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
        with:
          pin-name: thirdweb embeds ${{ needs.bump_version.outputs.new_tag }}
          path: './dist'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump_version.outputs.new_tag }}
          release_name: Release ${{ needs.bump_version.outputs.new_tag }}
          prerelease: ${{ contains(needs.bump_version.outputs.new_tag, '-') }}
          draft: false
          body: |
            IPFS Deployment Hash:
            - CID: `${{ steps.upload.outputs.hash }}`
            - URI: `ipfs://${{ steps.upload.outputs.hash }}`
            ${{ needs.bump_version.outputs.changelog }}
  warm:
    name: Warm IPFS Gateway
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        filename: ['marketplace.html', 'erc721.html', 'erc1155.html', 'erc20.html']
        gateway: ['ipfs.io', 'cloudflare-ipfs.com', 'gateway.pinata.cloud', 'ipfs.thirdweb.com']
    steps:
      - name: Warming ${{ matrix.gateway }} - ${{ matrix.filename }}
        uses: fjogeleit/http-request-action@a6980b2ca5f6772878f2eff8612bb309441a5cab
        with:
          url: 'https://${{ matrix.gateway }}/ipfs/${{ needs.release.outputs.ipfs_hash }}/${{ matrix.filename }}'
          method: 'GET'
          timeout: 300000 # 5 mins
  
